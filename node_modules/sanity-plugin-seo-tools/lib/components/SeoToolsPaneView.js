var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import React, { useCallback, useContext, useState } from 'react';
import useSWR from 'swr';
import YoastSEO from 'yoastseo';
import SerpPreview from 'react-serp-preview';
import { SeoToolsContext } from '../context';
import { InvalidConfigurationError } from '../errors';
import { extractErrorMessage, getYoastInsightsForContent, prepareRemoteData } from '../utils';
import { Box, Card, Stack, Tab, TabList, TabPanel } from '@sanity/ui';
import { SeoToolsAnalyzingCard } from './SeoToolsAnalyzingCard';
import { SeoToolsErrorCard } from './SeoToolsErrorCard';
import { AssessmentCategory } from '../constants';
import { SeoResultEntry } from './SeoResultEntry';
export var SeoToolsPaneView = function (_a) {
    var _b, _c;
    var document = _a.document;
    var config = useContext(SeoToolsContext);
    var _d = useState(AssessmentCategory.SEO), currentTab = _d[0], setCurrentTab = _d[1];
    var seoData = useSWR(['seoData', document._id, document._rev, config], function (_a) {
        var key = _a[0], id = _a[1], rev = _a[2], config = _a[3];
        return __awaiter(void 0, void 0, void 0, function () {
            var _b, seoFields, productionUrl, preparedData, _c, yoastInsights;
            var _d, _e;
            return __generator(this, function (_f) {
                switch (_f.label) {
                    case 0: return [4, Promise.all([
                            config.select(document),
                            config.resolveProductionUrl(document),
                        ])];
                    case 1:
                        _b = _f.sent(), seoFields = _b[0], productionUrl = _b[1];
                        if (!config.fetch && !config.prepare) {
                            throw new InvalidConfigurationError('When disabling the "fetch" behavior, you need to provide the prepare configuration');
                        }
                        if (!config.fetch) return [3, 3];
                        return [4, prepareRemoteData(productionUrl, {
                                contentSelector: config.contentSelector,
                            })];
                    case 2:
                        _c = _f.sent();
                        return [3, 5];
                    case 3: return [4, config.prepare(document)];
                    case 4:
                        _c = _f.sent();
                        _f.label = 5;
                    case 5:
                        preparedData = _c;
                        yoastInsights = getYoastInsightsForContent(YoastSEO, preparedData.content, {
                            url: productionUrl.toString(),
                            permalink: productionUrl.toString(),
                            title: preparedData.title,
                            description: preparedData.description,
                            langCulture: preparedData.locale,
                            keyword: (_d = seoFields.focus_keyword) !== null && _d !== void 0 ? _d : '',
                            synonyms: (_e = seoFields.focus_synonyms) !== null && _e !== void 0 ? _e : [],
                        });
                        return [2, {
                                yoastInsights: yoastInsights,
                                productionUrl: productionUrl,
                                seo: seoFields,
                                prepared: preparedData,
                            }];
                }
            });
        });
    }, {
        revalidateOnFocus: false,
    });
    var handleSetSeoTab = useCallback(function () {
        setCurrentTab(AssessmentCategory.SEO);
    }, []);
    var handleSetReadabilityTab = useCallback(function () {
        setCurrentTab(AssessmentCategory.READABILITY);
    }, []);
    return (React.createElement(Box, { padding: 3 },
        seoData.isValidating && (React.createElement(SeoToolsAnalyzingCard, null)),
        seoData.error && (React.createElement(SeoToolsErrorCard, null, extractErrorMessage(seoData.error))),
        seoData.data && (React.createElement(Stack, { space: 3 },
            config.render(seoData.data.seo, seoData.data.prepared, (React.createElement(Card, { shadow: 1, padding: [2, 2, 3] },
                React.createElement(SerpPreview, { title: (_b = seoData.data.seo.seo_title) !== null && _b !== void 0 ? _b : '', metaDescription: (_c = seoData.data.seo.meta_description) !== null && _c !== void 0 ? _c : '', url: seoData.data.productionUrl.toString() })))),
            React.createElement(TabList, { space: 2 },
                React.createElement(Tab, { id: "tablist-tab-seo", label: "SEO", "aria-controls": "tabpanel-seo", selected: currentTab === AssessmentCategory.SEO, onClick: handleSetSeoTab }),
                React.createElement(Tab, { id: "tablist-tab-readability", label: "Readability", "aria-controls": "tabpanel-readability", selected: currentTab === AssessmentCategory.READABILITY, onClick: handleSetReadabilityTab })),
            React.createElement(TabPanel, { id: "tabpanel-seo", "aria-labelledby": "tablist-tab-seo", hidden: currentTab !== AssessmentCategory.SEO },
                React.createElement(Card, { tone: "default", shadow: 1, padding: [2, 2, 3] },
                    React.createElement(Stack, { space: 3 }, seoData.data.yoastInsights.seo.map(function (result) { return (React.createElement(SeoResultEntry, { key: result.text, result: result })); })))),
            React.createElement(TabPanel, { id: "tabpanel-readability", "aria-labelledby": "tablist-tab-readability", hidden: currentTab !== AssessmentCategory.READABILITY },
                React.createElement(Card, { tone: "default", shadow: 1, padding: [2, 2, 3] },
                    React.createElement(Stack, { space: 3 }, seoData.data.yoastInsights.readability.map(function (result) { return (React.createElement(SeoResultEntry, { key: result.text, result: result })); }))))))));
};
