function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _asyncToGenerator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _iterableToArrayLimit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
var __generator = this && this.__generator || function(thisArg, body) {
    var f, y, t, g, _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    };
    return(g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g);
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
import React, { useCallback, useContext, useState } from "react";
import useSWR from "swr";
import YoastSEO from "yoastseo";
import SerpPreview from "react-serp-preview";
import { SeoToolsContext } from "../context";
import { InvalidConfigurationError } from "../errors";
import { extractErrorMessage, getYoastInsightsForContent, prepareRemoteData } from "../utils";
import { Box, Card, Stack, Tab, TabList, TabPanel } from "@sanity/ui";
import { SeoToolsAnalyzingCard } from "./SeoToolsAnalyzingCard";
import { SeoToolsErrorCard } from "./SeoToolsErrorCard";
import { AssessmentCategory } from "../constants";
import { SeoResultEntry } from "./SeoResultEntry";
export var SeoToolsPaneView = function(param) {
    var document = param.document;
    var config = useContext(SeoToolsContext);
    var _useState = _slicedToArray(useState(AssessmentCategory.SEO), 2), currentTab = _useState[0], setCurrentTab = _useState[1];
    var seoData = useSWR([
        "seoData",
        document._id,
        document._rev,
        config
    ], function() {
        var _ref = _asyncToGenerator(function(param) {
            var _param, key, id, rev, config, _ref, seoFields, productionUrl, preparedData, _tmp, _seoFields_focus_keyword, _seoFields_focus_synonyms, yoastInsights;
            return __generator(this, function(_state) {
                switch(_state.label){
                    case 0:
                        _param = _slicedToArray(param, 4), key = _param[0], id = _param[1], rev = _param[2], config = _param[3];
                        return [
                            4,
                            Promise.all([
                                config.select(document),
                                config.resolveProductionUrl(document)
                            ])
                        ];
                    case 1:
                        _ref = _slicedToArray.apply(void 0, [
                            _state.sent(),
                            2
                        ]), seoFields = _ref[0], productionUrl = _ref[1];
                        if (!config.fetch && !config.prepare) {
                            throw new InvalidConfigurationError('When disabling the "fetch" behavior, you need to provide the prepare configuration');
                        }
                        if (!config.fetch) return [
                            3,
                            3
                        ];
                        return [
                            4,
                            prepareRemoteData(productionUrl, {
                                contentSelector: config.contentSelector
                            })
                        ];
                    case 2:
                        _tmp = _state.sent();
                        return [
                            3,
                            5
                        ];
                    case 3:
                        return [
                            4,
                            config.prepare(document)
                        ];
                    case 4:
                        _tmp = _state.sent();
                        _state.label = 5;
                    case 5:
                        preparedData = _tmp;
                        yoastInsights = getYoastInsightsForContent(YoastSEO, preparedData.content, {
                            url: productionUrl.toString(),
                            permalink: productionUrl.toString(),
                            title: preparedData.title,
                            description: preparedData.description,
                            langCulture: preparedData.locale,
                            keyword: (_seoFields_focus_keyword = seoFields.focus_keyword) !== null && _seoFields_focus_keyword !== void 0 ? _seoFields_focus_keyword : "",
                            synonyms: (_seoFields_focus_synonyms = seoFields.focus_synonyms) !== null && _seoFields_focus_synonyms !== void 0 ? _seoFields_focus_synonyms : []
                        });
                        return [
                            2,
                            {
                                yoastInsights: yoastInsights,
                                productionUrl: productionUrl,
                                seo: seoFields,
                                prepared: preparedData
                            }
                        ];
                }
            });
        });
        return function(_) {
            return _ref.apply(this, arguments);
        };
    }(), {
        revalidateOnFocus: false
    });
    var handleSetSeoTab = useCallback(function() {
        setCurrentTab(AssessmentCategory.SEO);
    }, []);
    var handleSetReadabilityTab = useCallback(function() {
        setCurrentTab(AssessmentCategory.READABILITY);
    }, []);
    var _seoData_data_seo_seo_title, _seoData_data_seo_meta_description;
    return /*#__PURE__*/ React.createElement(Box, {
        padding: 3
    }, seoData.isValidating && /*#__PURE__*/ React.createElement(SeoToolsAnalyzingCard, null), seoData.error && /*#__PURE__*/ React.createElement(SeoToolsErrorCard, null, extractErrorMessage(seoData.error)), seoData.data && /*#__PURE__*/ React.createElement(Stack, {
        space: 3
    }, config.render(seoData.data.seo, seoData.data.prepared, /*#__PURE__*/ React.createElement(Card, {
        shadow: 1,
        padding: [
            2,
            2,
            3
        ]
    }, /*#__PURE__*/ React.createElement(SerpPreview, {
        title: (_seoData_data_seo_seo_title = seoData.data.seo.seo_title) !== null && _seoData_data_seo_seo_title !== void 0 ? _seoData_data_seo_seo_title : "",
        metaDescription: (_seoData_data_seo_meta_description = seoData.data.seo.meta_description) !== null && _seoData_data_seo_meta_description !== void 0 ? _seoData_data_seo_meta_description : "",
        url: seoData.data.productionUrl.toString()
    }))), /*#__PURE__*/ React.createElement(TabList, {
        space: 2
    }, /*#__PURE__*/ React.createElement(Tab, {
        id: "tablist-tab-seo",
        label: "SEO",
        "aria-controls": "tabpanel-seo",
        selected: currentTab === AssessmentCategory.SEO,
        onClick: handleSetSeoTab
    }), /*#__PURE__*/ React.createElement(Tab, {
        id: "tablist-tab-readability",
        label: "Readability",
        "aria-controls": "tabpanel-readability",
        selected: currentTab === AssessmentCategory.READABILITY,
        onClick: handleSetReadabilityTab
    })), /*#__PURE__*/ React.createElement(TabPanel, {
        id: "tabpanel-seo",
        "aria-labelledby": "tablist-tab-seo",
        hidden: currentTab !== AssessmentCategory.SEO
    }, /*#__PURE__*/ React.createElement(Card, {
        tone: "default",
        shadow: 1,
        padding: [
            2,
            2,
            3
        ]
    }, /*#__PURE__*/ React.createElement(Stack, {
        space: 3
    }, seoData.data.yoastInsights.seo.map(function(result) {
        return /*#__PURE__*/ React.createElement(SeoResultEntry, {
            key: result.text,
            result: result
        });
    })))), /*#__PURE__*/ React.createElement(TabPanel, {
        id: "tabpanel-readability",
        "aria-labelledby": "tablist-tab-readability",
        hidden: currentTab !== AssessmentCategory.READABILITY
    }, /*#__PURE__*/ React.createElement(Card, {
        tone: "default",
        shadow: 1,
        padding: [
            2,
            2,
            3
        ]
    }, /*#__PURE__*/ React.createElement(Stack, {
        space: 3
    }, seoData.data.yoastInsights.readability.map(function(result) {
        return /*#__PURE__*/ React.createElement(SeoResultEntry, {
            key: result.text,
            result: result
        });
    }))))));
};

//# sourceMappingURL=SeoToolsPaneView.js.map