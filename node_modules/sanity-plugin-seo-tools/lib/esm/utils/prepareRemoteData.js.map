{"version":3,"sources":["../../../src/utils/prepareRemoteData.ts"],"sourcesContent":["import { LangCultureMap } from '../constants'\nimport type { PreparedData } from '../context'\n\ntype Options = {\n  contentSelector?: string\n}\n\nexport async function prepareRemoteData(\n  url: URL,\n  options: Options\n): Promise<PreparedData> {\n  const contentSelector = options.contentSelector ?? 'body'\n  const result = await fetch(url.toString())\n  const html = await result.text()\n  const parser = new DOMParser()\n  const doc = parser.parseFromString(html, 'text/html')\n  // remove all script tags\n  Array.from(doc.body.querySelectorAll('script')).forEach((script) => {\n    script.remove();\n  });\n\n  // find the language and culture\n  // if only lang is specified - we will map it to a lang culture combination\n  let langCulture = doc.documentElement.lang ?? LangCultureMap.en\n  if (!langCulture.includes('-')) {\n    langCulture = (\n      LangCultureMap?.[langCulture.toLowerCase() as keyof typeof LangCultureMap]\n      ?? LangCultureMap.en\n    )\n  }\n\n  // find the title, description and content\n  const title = doc.title || doc.querySelector('h1')?.textContent || doc.querySelector('h2')?.textContent || ''\n  const description = doc.querySelector<HTMLMetaElement>('meta[name=\"description\"]')?.content || ''\n  const content = doc.querySelector(contentSelector)?.innerHTML || ''\n\n  return {\n    locale: langCulture,\n    title,\n    description,\n    content,\n  }\n}"],"names":["LangCultureMap","prepareRemoteData","url","options","doc","contentSelector","result","html","parser","langCulture","title","description","content","fetch","toString","text","DOMParser","parseFromString","Array","from","body","querySelectorAll","forEach","script","remove","documentElement","lang","en","includes","toLowerCase","querySelector","textContent","innerHTML","locale"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,cAAc,QAAQ,eAAc;AAO7C,gBAAsBC,kBACpBC,GAAQ,EACRC,OAAgB;WAFIF;CAmCrB;SAnCqBA;IAAAA,qBAAf,kBAAA,SACLC,GAAQ,EACRC,OAAgB,EACO;YAsBIC,oBAAwCA,qBAC/CA,qBACJA,qBAvBQD,0BAAlBE,iBACAC,QACAC,MACAC,QACAJ,KAQYA,2BAAdK,aAGAT,yCAMEU,OACAC,aACAC;;;;oBAvBAP,kBAAkBF,CAAAA,2BAAAA,QAAQE,eAAe,cAAvBF,sCAAAA,2BAA2B,MAAM;oBAC1C;;wBAAMU,MAAMX,IAAIY,QAAQ;;;oBAAjCR,SAAS;oBACF;;wBAAMA,OAAOS,IAAI;;;oBAAxBR,OAAO;oBACPC,SAAS,IAAIQ;oBACbZ,MAAMI,OAAOS,eAAe,CAACV,MAAM;oBACzC,yBAAyB;oBACzBW,MAAMC,IAAI,CAACf,IAAIgB,IAAI,CAACC,gBAAgB,CAAC,WAAWC,OAAO,CAAC,SAACC,QAAW;wBAClEA,OAAOC,MAAM;oBACf;oBAIIf,cAAcL,CAAAA,4BAAAA,IAAIqB,eAAe,CAACC,IAAI,cAAxBtB,uCAAAA,4BAA4BJ,eAAe2B,EAAE;oBAC/D,IAAI,CAAClB,YAAYmB,QAAQ,CAAC,MAAM;;wBAC9BnB,cACET,CAAAA,0CAAAA,2BAAAA,4BAAAA,KAAAA,IAAAA,cAAgB,CAACS,YAAYoB,WAAW,GAAkC,cAA1E7B,qDAAAA,0CACGA,eAAe2B,EAAE;oBAExB,CAAC;oBAGKjB,QAAQN,IAAIM,KAAK,IAAIN,CAAAA,CAAAA,qBAAAA,IAAI0B,aAAa,CAAC,mBAAlB1B,gCAAAA,KAAAA,IAAAA,mBAAyB2B,WAAW,AAAD,KAAK3B,CAAAA,CAAAA,sBAAAA,IAAI0B,aAAa,CAAC,mBAAlB1B,iCAAAA,KAAAA,IAAAA,oBAAyB2B,WAAW,AAAD,KAAK;oBACrGpB,cAAcP,CAAAA,CAAAA,sBAAAA,IAAI0B,aAAa,CAAkB,yCAAnC1B,iCAAAA,KAAAA,IAAAA,oBAAgEQ,OAAO,AAAD,KAAK;oBACzFA,UAAUR,CAAAA,CAAAA,sBAAAA,IAAI0B,aAAa,CAACzB,8BAAlBD,iCAAAA,KAAAA,IAAAA,oBAAoC4B,SAAS,AAAD,KAAK;oBAEjE;;wBAAO;4BACLC,QAAQxB;4BACRC,OAAAA;4BACAC,aAAAA;4BACAC,SAAAA;wBACF;;;;IACF;WAnCsBX"}