{"version":3,"sources":["../../../src/utils/prepareRemoteData.ts"],"sourcesContent":["import { LangCultureMap } from '../constants'\nimport type { PreparedData } from '../context'\n\ntype Options = {\n  contentSelector?: string\n}\n\nexport async function prepareRemoteData(\n  url: URL,\n  options: Options\n): Promise<PreparedData> {\n  const contentSelector = options.contentSelector ?? 'body'\n  const result = await fetch(url.toString())\n  const html = await result.text()\n  const parser = new DOMParser()\n  const doc = parser.parseFromString(html, 'text/html')\n  // remove all script tags\n  Array.from(doc.body.querySelectorAll('script')).forEach((script) => {\n    script.remove();\n  });\n\n  // find the language and culture\n  // if only lang is specified - we will map it to a lang culture combination\n  let langCulture = doc.documentElement.lang ?? LangCultureMap.en\n  if (!langCulture.includes('-')) {\n    langCulture = (\n      LangCultureMap?.[langCulture.toLowerCase() as keyof typeof LangCultureMap]\n      ?? LangCultureMap.en\n    )\n  }\n\n  // find the title, description and content\n  const title = doc.title || doc.querySelector('h1')?.textContent || doc.querySelector('h2')?.textContent || ''\n  const description = doc.querySelector<HTMLMetaElement>('meta[name=\"description\"]')?.content || ''\n  const content = doc.querySelector(contentSelector)?.innerHTML || ''\n\n  return {\n    locale: langCulture,\n    title,\n    description,\n    content,\n  }\n}"],"names":["prepareRemoteData","url","options","doc","contentSelector","result","html","parser","langCulture","LangCultureMap","title","description","content","fetch","toString","text","DOMParser","parseFromString","Array","from","body","querySelectorAll","forEach","script","remove","documentElement","lang","en","includes","toLowerCase","querySelector","textContent","innerHTML","locale"],"mappings":";;;;+BAOsBA;;;eAAAA;;;yBAPS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAOTA,kBACpBC,GAAQ,EACRC,OAAgB;WAFIF;;SAAAA;IAAAA,qBAAf,kBAAA,SACLC,GAAQ,EACRC,OAAgB,EACO;YAsBIC,oBAAwCA,qBAC/CA,qBACJA,qBAvBQD,0BAAlBE,iBACAC,QACAC,MACAC,QACAJ,KAQYA,2BAAdK,aAGAC,yCAMEC,OACAC,aACAC;;;;oBAvBAR,kBAAkBF,CAAAA,2BAAAA,QAAQE,eAAe,cAAvBF,sCAAAA,2BAA2B,MAAM;oBAC1C;;wBAAMW,MAAMZ,IAAIa,QAAQ;;;oBAAjCT,SAAS;oBACF;;wBAAMA,OAAOU,IAAI;;;oBAAxBT,OAAO;oBACPC,SAAS,IAAIS;oBACbb,MAAMI,OAAOU,eAAe,CAACX,MAAM;oBACzC,yBAAyB;oBACzBY,MAAMC,IAAI,CAAChB,IAAIiB,IAAI,CAACC,gBAAgB,CAAC,WAAWC,OAAO,CAAC,SAACC,QAAW;wBAClEA,OAAOC,MAAM;oBACf;oBAIIhB,cAAcL,CAAAA,4BAAAA,IAAIsB,eAAe,CAACC,IAAI,cAAxBvB,uCAAAA,4BAA4BM,yBAAc,CAACkB,EAAE;oBAC/D,IAAI,CAACnB,YAAYoB,QAAQ,CAAC,MAAM;;wBAC9BpB,cACEC,CAAAA,0CAAAA,yBAAc,aAAdA,yBAAc,cAAdA,KAAAA,IAAAA,yBAAc,AAAE,CAACD,YAAYqB,WAAW,GAAkC,cAA1EpB,qDAAAA,0CACGA,yBAAc,CAACkB,EAAE;oBAExB,CAAC;oBAGKjB,QAAQP,IAAIO,KAAK,IAAIP,CAAAA,CAAAA,qBAAAA,IAAI2B,aAAa,CAAC,mBAAlB3B,gCAAAA,KAAAA,IAAAA,mBAAyB4B,WAAW,AAAD,KAAK5B,CAAAA,CAAAA,sBAAAA,IAAI2B,aAAa,CAAC,mBAAlB3B,iCAAAA,KAAAA,IAAAA,oBAAyB4B,WAAW,AAAD,KAAK;oBACrGpB,cAAcR,CAAAA,CAAAA,sBAAAA,IAAI2B,aAAa,CAAkB,yCAAnC3B,iCAAAA,KAAAA,IAAAA,oBAAgES,OAAO,AAAD,KAAK;oBACzFA,UAAUT,CAAAA,CAAAA,sBAAAA,IAAI2B,aAAa,CAAC1B,8BAAlBD,iCAAAA,KAAAA,IAAAA,oBAAoC6B,SAAS,AAAD,KAAK;oBAEjE;;wBAAO;4BACLC,QAAQzB;4BACRE,OAAAA;4BACAC,aAAAA;4BACAC,SAAAA;wBACF;;;;IACF;WAnCsBZ"}