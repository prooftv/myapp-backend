declare type Options = {
    keyword: string;
    url: string;
    permalink: string;
    title: string;
    synonyms: string[];
    description: string;
    langCulture: string;
};
export declare const getYoastInsightsForContent: (YoastSEO: typeof import("yoastseo"), html: string, options: Options) => {
    keyphraseLength: number;
    metaDescriptionKeyword: number;
    getLinkStatistics: false | {
        total: number;
        totalNaKeyword: number;
        keyword: {
            totalKeyword: number;
            matchedAnchors: any[];
        };
        internalTotal: number;
        internalDofollow: number;
        internalNofollow: number;
        externalTotal: number;
        externalDofollow: number;
        externalNofollow: number;
        otherTotal: number;
        otherDofollow: number;
        otherNofollow: number;
    };
    firstParagraph: false | {
        foundInOneSentence: boolean;
        foundInParagraph: boolean;
        keyphraseOrSynonym: string;
    };
    keywordDensity: number;
    wordCountInText: number;
    keywordCount: false | {
        count: number;
        length: number;
        markings: any[];
        matches: string[];
    };
    keywordInPageTitle: false | {
        allWordsFound: boolean;
        exactMatchFound: boolean;
        exactMatchKeyphrase: boolean;
        position: number;
    };
    altTagCount: false | {
        noAlt: number;
        withAlt: number;
        withAltKeyword: number;
        withAltNonKeyword: number;
    };
    pageTitleWidth: number;
    keywordCountInUrl: false | {
        keyphraseLength: number;
        percentWordMatches: number;
    };
    countSentencesFromText: string[];
    passiveVoice: false | {
        passives: string[];
        total: number;
    };
    sentenceBeginnings: false | {
        word: string;
        count: number;
        sentences: string[];
    }[];
    sentences: string[];
    fleschReading: number;
    paragraphLength: false | {
        wordCount: number;
        text: string;
    }[];
    transitionWords: false | {
        sentenceResults: {
            sentence: string;
            transitionWords: string[];
        }[];
        totalSentences: number;
        transitionWordSentences: number;
    };
};
export {};
